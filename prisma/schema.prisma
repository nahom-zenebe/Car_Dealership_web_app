generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Car {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  make         String
  model        String
  year         Int
  price        Float
  mileage      Int
  color        String
  inStock      Boolean       @default(true)
  imageUrl     String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  sales        Sale[]
  appointments Appointment[]
}



model Sale {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  car         Car      @relation(fields: [carId], references: [id])
  carId       String   @db.ObjectId
  customer    Customer @relation(fields: [customerId], references: [id])
  customerId  String   @db.ObjectId
  saleDate    DateTime @default(now())
  price       Float
  seller      Seller   @relation(fields: [sellerId], references: [id])
  sellerId    String   @db.ObjectId
}

model Seller {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  clerkId   String   @unique
  name      String
  email     String   @unique
  phone     String?
  sales     Sale[]
  createdAt DateTime @default(now())
}

model Customer {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  clerkId      String        @unique
  name         String?
  createdAt    DateTime      @default(now())
  appointments Appointment[]
  sales        Sale[]        
}



model Appointment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @db.ObjectId
  car        Car      @relation(fields: [carId], references: [id])
  carId      String   @db.ObjectId
  date       DateTime
  status     String   @default("scheduled")
  notes      String?
}
